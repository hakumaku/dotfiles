set surround
set ideajoin
set ideamarks
set visualbell

set number
set scrolloff=5
set relativenumber
set ignorecase
set smartcase
set incsearch
set hlsearch
set clipboard+=unnamed
set clipboard+=ideaput
set highlightedyank
" set sneak
" set easymotion
" set which-key

Plug 'preservim/nerdtree'
set NERDTree

sethandler <C-A> a:vim i:vim
sethandler <C-B> a:vim i:vim
sethandler <C-C> a:vim i:vim
sethandler <C-D> a:vim i:vim
sethandler <C-E> a:vim i:vim
sethandler <C-F> a:vim i:vim
sethandler <C-G> a:vim i:vim
sethandler <C-H> a:vim i:vim
sethandler <C-I> a:vim i:vim
sethandler <C-J> a:vim i:vim
sethandler <C-K> a:vim i:vim
sethandler <C-L> a:vim i:vim
sethandler <C-M> a:vim i:vim
sethandler <C-N> a:vim i:vim
sethandler <C-O> a:vim i:vim
sethandler <C-P> a:vim i:vim
sethandler <C-Q> a:vim i:vim
sethandler <C-R> a:vim i:vim
sethandler <C-S> a:vim i:vim
sethandler <C-T> a:vim i:vim
sethandler <C-U> a:vim i:vim
sethandler <C-V> a:vim i:vim
sethandler <C-W> a:vim i:vim
sethandler <C-X> a:vim i:vim
sethandler <C-Y> a:vim i:vim
sethandler <C-Z> a:vim i:vim
sethandler <C-[> a:vim i:vim
sethandler <C-]> a:vim i:vim

imap <C-y> <Action>(EditorChooseLookupItemReplace)
imap <C-v> <ESC>:action EditorPaste<CR>a
imap <C-j> <CR>
nmap <C-l> <ESC>:nohl<CR>
vmap <C-c> <Action>(EditorCopy)
vmap \v "_dP

" navigations
nmap <C-s>s <Action>(FindInPath)
nmap <C-s>e <Action>(GotoUrlAction)
nmap <C-s>f <Action>(GotoFile)
nmap <C-s>t <Action>(GotoSymbol)
nmap <C-s>c <Action>(GotoClass)
nmap <C-s>o <Action>(FileStructurePopup)
nmap <C-s>i <Action>(SelectInProjectView)
nmap <C-s>r <Action>(RecentFiles)

" LSP
nmap gd <Action>(GotoDeclaration)
nmap gi <Action>(GotoImplementation)
nmap gu <Action>(FindUsages)
nmap gK <Action>(ParameterInfo)
" Signature Help in Insert Mode
imap <C-k> <C-o><Action>(ParameterInfo)
" etc
nmap g; <Action>(JumpToLastChange)
nmap g, <Action>(JumpToNextChange)
vmap gc <Action>(CommentByLineComment)
vmap gb <Action>(CommentByBlockComment)

" refactorings
nmap <leader>rr <Action>(Refactorings.QuickListPopupAction)
nmap <leader>rn <Action>(RenameElement)
nmap <leader>rm <Action>(ExtractMethod)
nmap <leader>rv <Action>(IntroduceVariable)
nmap <leader>rf <Action>(IntroduceField)
nmap <leader>rs <Action>(ChangeSignature)
nmap <leader>f <Action>(ReformatCode)

nmap <C-o> :action Back<CR>
nmap <C-i> :action Forward<CR>

" windows
nmap <BS> <Action>(CloseEditor)

nmap <C-w>f <Action>(ActivateTerminalToolWindow)
nmap <C-w>o <Action>(ActivateProjectToolWindow)
nmap <C-w>t <Action>(ActivateStructureToolWindow)
nmap <C-w>d <Action>(com.jetbrains.python.console.RunPythonOrDebugConsoleAction)
nmap <C-w>b <Action>(Switcher)
nmap <C-w>g <Action>(Git.Branches)
nmap <C-w>. <Action>(HideAllWindows)

" test
nmap <leader>e <Action>(Run)
nmap <leader>E <Action>(RunClass)
nmap <leader>d <Action>(Debug)
nmap <leader>D <Action>(DebugClass)
nmap <leader>q <Action>(Stop)
nmap <leader>b <Action>(ToggleLineBreakpoint)
nmap <leader>td <Action>(ChooseDebugConfiguration)

" debug
nmap <leader>h <Action>(RunToCursor)
nmap <leader>j <Action>(StepInto)
nmap <leader>k <Action>(StepOut)
nmap <leader>l <Action>(StepOver)
nmap <leader>de <Action>(EvaluateExpression)
vmap <leader>de <Action>(EvaluateExpression)
nmap <leader>du <Action>(ActivateDebugToolWindow)

" unimpaired
nmap ]d <Action>(GotoNextError)
nmap [d <Action>(GotoPreviousError)
nmap ]b <Action>(NextTab)
nmap [b <Action>(PreviousTab)
nmap ]B <ESC>:tabm+1<CR>
nmap [B <ESC>:tabm-1<CR>
nmap ]m <Action>(MethodDown)
nmap [m <Action>(MethodUp)
nmap <C-n> <Action>(MethodDown)
nmap <C-p> <Action>(MethodUp)
nmap ]c <Action>(VcsShowNextChangeMarker)
nmap [c <Action>(VcsShowPrevChangeMarker)
nmap ]t /TODO<cr>
nmap [t ?TODO<cr>

" git
nmap <leader>gB <Action>(Git.Branches)
nmap <leader>gs <Action>(ActivateCommitToolWindow)
nmap <leader>gp <Action>(VcsShowCurrentChangeMarker)
nmap <leader>gr <Action>(Vcs.RollbackChangedLines)
nmap <leader>gg <Action>(ActivateCommitToolWindow)
" Git Blame Line
nmap <leader>gb <Action>(Annotate)
" Git Current File History
nmap <leader>gf <Action>(Vcs.ShowTabbedFileHistory)
" Git Log
nmap <leader>gl <Action>(Vcs.Show.Log)

